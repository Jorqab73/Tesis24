axis.text=element_text(size=13),
axis.title=element_text(size=15))
p2<-ggplot(Rend_summary3, aes(Year, Total.fp3, colour=RendLevels3)) +
geom_line() + geom_point() +
scale_x_continuous(breaks=c(2003,2005,2007, 2009, 2011, 2013, 2015)) +
ylab("Surplus population that could be fed")  +
scale_colour_discrete(name="Yield class (ton/ha)") + ggtitle("b)") + theme(plot.title= element_text(hjust=0)) +
scale_y_continuous(breaks=c(2e7, 4e7, 6e7), labels=c("20", "40", "60")) +
theme(text=element_text(size=12),
axis.text=element_text(size=13),
axis.title=element_text(size=15),
legend.position=c(.8,.85),
legend.text=element_text(size=13),
legend.title = element_text(size=14))
multiplot(p1, p2, cols=2)
p1<- ggplot(Rend_summary3, aes(Year, Total.fp0, colour=RendLevels3)) +
geom_line() + geom_point() +
scale_x_continuous(breaks=c(2003,2005,2007, 2009, 2011, 2013, 2015)) +
ylab("Total population that could be fed") + scale_colour_discrete(name="Yield class (ton/ha)") +
theme(legend.position="none") + ggtitle("a)") + theme(plot.title= element_text(hjust=0)) +
scale_y_continuous(breaks=c(2e7, 4e7, 6e7), labels=c("20", "40", "60"), limits=c(0,7.1e7)) +
theme(text=element_text(size=13),
axis.text=element_text(size=13),
axis.title=element_text(size=15))
p1
p2<-ggplot(Rend_summary3, aes(Year, Total.fp3, colour=RendLevels3)) +
geom_line() + geom_point() +
scale_x_continuous(breaks=c(2003,2005,2007, 2009, 2011, 2013, 2015)) +
ylab("Surplus population that could be fed")  +
scale_colour_discrete(name="Yield class (ton/ha)") + ggtitle("b)") + theme(plot.title= element_text(hjust=0)) +
scale_y_continuous(breaks=c(2e7, 4e7, 6e7), labels=c("20", "40", "60"), limits=c(0,7.1e7))) +
theme(text=element_text(size=12),
axis.text=element_text(size=13),
axis.title=element_text(size=15),
legend.position=c(.8,.85),
legend.text=element_text(size=13),
legend.title = element_text(size=14))
multiplot(p1, p2, cols=2)
# desired plots
p1<- ggplot(Rend_summary3, aes(Year, Total.fp0, colour=RendLevels3)) +
geom_line() + geom_point() +
scale_x_continuous(breaks=c(2003,2005,2007, 2009, 2011, 2013, 2015)) +
ylab("Total population that could be fed") + scale_colour_discrete(name="Yield class (ton/ha)") +
theme(legend.position="none") + ggtitle("a)") + theme(plot.title= element_text(hjust=0)) +
scale_y_continuous(breaks=c(2e7, 4e7, 6e7), labels=c("20", "40", "60"), limits=c(0,7.1e7)) +
theme(text=element_text(size=13),
axis.text=element_text(size=13),
axis.title=element_text(size=15))
p2<-ggplot(Rend_summary3, aes(Year, Total.fp3, colour=RendLevels3)) +
geom_line() + geom_point() +
scale_x_continuous(breaks=c(2003,2005,2007, 2009, 2011, 2013, 2015)) +
ylab("Surplus population that could be fed")  +
scale_colour_discrete(name="Yield class (ton/ha)") + ggtitle("b)") + theme(plot.title= element_text(hjust=0)) +
scale_y_continuous(breaks=c(2e7, 4e7, 6e7), labels=c("20", "40", "60"), limits=c(0,7.1e7))) +
theme(text=element_text(size=12),
axis.text=element_text(size=13),
axis.title=element_text(size=15),
legend.position=c(.8,.85),
legend.text=element_text(size=13),
legend.title = element_text(size=14))
p2<-ggplot(Rend_summary3, aes(Year, Total.fp3, colour=RendLevels3)) +
geom_line() + geom_point() +
scale_x_continuous(breaks=c(2003,2005,2007, 2009, 2011, 2013, 2015)) +
ylab("Surplus population that could be fed")  +
scale_colour_discrete(name="Yield class (ton/ha)") + ggtitle("b)") + theme(plot.title= element_text(hjust=0)) +
scale_y_continuous(breaks=c(2e7, 4e7, 6e7), labels=c("20", "40", "60"), limits=c(0,7.1e7)) +
theme(text=element_text(size=12),
axis.text=element_text(size=13),
axis.title=element_text(size=15),
legend.position=c(.8,.85),
legend.text=element_text(size=13),
legend.title = element_text(size=14))
multiplot(p1, p2, cols=2)
# desired plots
p1<- ggplot(Rend_summary3, aes(Year, Total.fp0, colour=RendLevels3)) +
geom_line() + geom_point() +
scale_x_continuous(breaks=c(2003,2005,2007, 2009, 2011, 2013, 2015)) +
ylab("Total population (Millions) that could be fed") + scale_colour_discrete(name="Yield class (ton/ha)") +
theme(legend.position="none") + ggtitle("a)") + theme(plot.title= element_text(hjust=0)) +
scale_y_continuous(breaks=c(2e7, 4e7, 6e7), labels=c("20", "40", "60"), limits=c(0,7.1e7)) +
theme(text=element_text(size=13),
axis.text=element_text(size=13),
axis.title=element_text(size=15))
p2<-ggplot(Rend_summary3, aes(Year, Total.fp3, colour=RendLevels3)) +
geom_line() + geom_point() +
scale_x_continuous(breaks=c(2003,2005,2007, 2009, 2011, 2013, 2015)) +
ylab("Surplus population (Millions) that could be fed")  +
scale_colour_discrete(name="Yield class (ton/ha)") + ggtitle("b)") + theme(plot.title= element_text(hjust=0)) +
scale_y_continuous(breaks=c(2e7, 4e7, 6e7), labels=c("20", "40", "60"), limits=c(0,7.1e7)) +
theme(text=element_text(size=12),
axis.text=element_text(size=13),
axis.title=element_text(size=15),
legend.position=c(.8,.85),
legend.text=element_text(size=13),
legend.title = element_text(size=14))
multiplot(p1, p2, cols=2)
### This scripts plots Figure 1 and Figure 4 of the ms
#libraries
library(Rmisc)
library(ggplot2)
library(dplyr)
library(tidyr)
#### Load data
siap_procampo2010 <- read.csv("procampo2010-SIAP2010.csv", head = T)
# Keep only SIAP data (because INEGI data is longer than SIAPs)
sum(is.na(siap_procampo2010$rend2010))
siap2010<-siap_procampo2010[!is.na(siap_procampo2010$rend2010), ]
sum(is.na(siap2010$rend2010))
######## Alll yield categories
# create categ
RendLevels<-cut(siap2010$rend2010, breaks=c(-Inf,1,2,3,4,5,6,Inf),
labels=c("<=1", ">1 to 2", ">2 to 3", ">3 to 4", ">4 to 5", ">5 to 6", ">6"))
# add to df
siap2010<-cbind(siap2010, RendLevels)
# group by rend levels
siap2010<-group_by(siap2010, RendLevels)
# Check expected value of bars
summarise(siap2010, suma=sum(acos2010))
summarise(siap2010, suma=sum(prod2010))
setwd("/Volumes/bioseguridad/MBellon/Debunking the myth of the smallholder maize farmer/Archivos Importantes/Dryadrepo_Debunking/Figures_ProducPopFarms")
### This scripts plots Figure 1 and Figure 4 of the ms
#libraries
library(Rmisc)
library(ggplot2)
library(dplyr)
library(tidyr)
#### Load data
siap_procampo2010 <- read.csv("procampo2010-SIAP2010.csv", head = T)
# Keep only SIAP data (because INEGI data is longer than SIAPs)
sum(is.na(siap_procampo2010$rend2010))
siap2010<-siap_procampo2010[!is.na(siap_procampo2010$rend2010), ]
sum(is.na(siap2010$rend2010))
######## Alll yield categories
# create categ
RendLevels<-cut(siap2010$rend2010, breaks=c(-Inf,1,2,3,4,5,6,Inf),
labels=c("<=1", ">1 to 2", ">2 to 3", ">3 to 4", ">4 to 5", ">5 to 6", ">6"))
# add to df
siap2010<-cbind(siap2010, RendLevels)
# group by rend levels
siap2010<-group_by(siap2010, RendLevels)
# Check expected value of bars
summarise(siap2010, suma=sum(acos2010))
summarise(siap2010, suma=sum(prod2010))
#### Plot deficit surplus
### Create variable for surplus or deficit
# Variable
siap2010<-mutate(siap2010, categSurplusDef= ifelse(fp3<0, "Deficit", "Surplus"))
#make surplusordefict absolute
siap2010<-mutate(siap2010, ValueSurplusDef= abs(fp3))
#Group
siap2010<-group_by(siap2010, RendLevels)
p2 <- ggplot(siap2010, aes(RendLevels, fill=categSurplusDef)) + theme_bw() +
geom_bar(stat = "count", position="dodge") +
ylab("Number of Municiplalities") + xlab("Yield class") +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
theme(axis.text.y = element_text(size = 14),
axis.text.x=element_text(size=14, angle=45, hjust=1),
legend.text= element_text(size=14),
legend.title= element_text(size=15, face="bold"),
axis.title=element_text(size=15,face="bold")) +
scale_fill_manual(values=c("#A80000", "#0070FF" ),
name  ="Potential people fed",
breaks=c("Deficit", "Surplus")) +
theme(legend.position=c(0.85,0.75)) +
ggtitle("b)") + theme(plot.title = element_text(hjust=0, size=14))
p2
# Single fig
multiplot(p1, p2, col=1)
#### Plot deficit surplus
### Create variable for surplus or deficit
# Variable
siap2010<-mutate(siap2010, categSurplusDef= ifelse(fp3<0, "Deficit", "Surplus"))
#make surplusordefict absolute
siap2010<-mutate(siap2010, ValueSurplusDef= abs(fp3))
#Group
siap2010<-group_by(siap2010, RendLevels)
p2 <- ggplot(siap2010, aes(RendLevels, fill=categSurplusDef)) + theme_bw() +
geom_bar(stat = "count", position="dodge") +
ylab("Number of Municiplalities") + xlab("Yield class") +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
theme(axis.text.y = element_text(size = 14),
axis.text.x=element_text(size=14, angle=45, hjust=1),
legend.text= element_text(size=14),
legend.title= element_text(size=15, face="bold"),
axis.title=element_text(size=15,face="bold")) +
scale_fill_manual(values=c("#A80000", "#0070FF" ),
name  ="Potential people fed",
breaks=c("Deficit", "Surplus")) +
theme(legend.position=c(0.85,0.75)) +
ggtitle("b)") + theme(plot.title = element_text(hjust=0, size=14))
p2
# Single fig
multiplot(p1, p2, col=1)
## option Rural, fp1, fp0
# Long for poptype as variable
siap_long<-gather(siap2010, pop_type, population , Pob_rur10, fp1, fp0)
siap_long$pop_type<-factor(siap_long$pop_type, levels=c("Pob_rur10", "fp1", "fp0")) # this is needed to have dodge to plot in the desired order
# plot
p1 <-  ggplot(siap_long, aes(x=RendLevels, y=population, fill=pop_type)) + theme_bw() +
geom_bar(stat = "summary", fun.y= "sum", position="dodge") +
scale_y_continuous(breaks=c(0, 5e6, 1e7, 1.5e7,2e7, 2.5e7), labels=c("0", "5", "10", "15", "20", "25")) +
ylab("Million people") + xlab("Yield class") +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
theme(axis.text.y = element_text(size = 14),
legend.text= element_text(size=14),
legend.title= element_text(size=14, face="bold"),
axis.title=element_text(size=15, face="bold"),
axis.text.x=element_blank(), # remove x axis
axis.title.x=element_blank()) +
scale_fill_manual(values=c("#E69F00", "#009E73", "#56B4E9"),
name  ="",
breaks=c("Pob_rur10", "fp1", "fp0"),
labels=c("Rural \npop.", "Rural pop. that could be fed in municipalities \nwhere maize was produced",
"Total pop. that could be \nfed from maize production")) +
theme(legend.position="top") +
ggtitle("a)") + theme(plot.title = element_text(hjust=0, size=14))
p1
#### Plot deficit surplus
### Create variable for surplus or deficit
# Variable
siap2010<-mutate(siap2010, categSurplusDef= ifelse(fp3<0, "Deficit", "Surplus"))
#make surplusordefict absolute
siap2010<-mutate(siap2010, ValueSurplusDef= abs(fp3))
#Group
siap2010<-group_by(siap2010, RendLevels)
p2 <- ggplot(siap2010, aes(RendLevels, fill=categSurplusDef)) + theme_bw() +
geom_bar(stat = "count", position="dodge") +
ylab("Number of Municiplalities") + xlab("Yield class") +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
theme(axis.text.y = element_text(size = 14),
axis.text.x=element_text(size=14, angle=45, hjust=1),
legend.text= element_text(size=14),
legend.title= element_text(size=15, face="bold"),
axis.title=element_text(size=15,face="bold")) +
scale_fill_manual(values=c("#A80000", "#0070FF" ),
name  ="Potential people fed",
breaks=c("Deficit", "Surplus")) +
theme(legend.position=c(0.85,0.75)) +
ggtitle("b)") + theme(plot.title = element_text(hjust=0, size=14))
p2
# Single fig
multiplot(p1, p2, col=1)
# Single fig
multiplot(p1, p2, col=1)
### This scripts plots Figure 1 and Figure 4 of the ms
#libraries
library(Rmisc)
library(ggplot2)
library(dplyr)
library(tidyr)
#### Load data
siap_procampo2010 <- read.csv("procampo2010-SIAP2010.csv", head = T)
# Keep only SIAP data (because INEGI data is longer than SIAPs)
sum(is.na(siap_procampo2010$rend2010))
siap2010<-siap_procampo2010[!is.na(siap_procampo2010$rend2010), ]
sum(is.na(siap2010$rend2010))
######## Alll yield categories
# create categ
RendLevels<-cut(siap2010$rend2010, breaks=c(-Inf,1,2,3,4,5,6,Inf),
labels=c("<=1", ">1 to 2", ">2 to 3", ">3 to 4", ">4 to 5", ">5 to 6", ">6"))
# add to df
siap2010<-cbind(siap2010, RendLevels)
# group by rend levels
siap2010<-group_by(siap2010, RendLevels)
# Check expected value of bars
summarise(siap2010, suma=sum(acos2010))
summarise(siap2010, suma=sum(prod2010))
### Plot Area planted and area harvested #####
# Long for area as variable
siap_long<-gather(siap2010, tipodearea, area, aplt2010, acos2010)
siap_long$tipodearea<-factor(siap_long$tipodearea, levels=c("aplt2010", "acos2010")) # this is needed to have dodge to plot in the desired order
#Group
siap_long<-group_by(siap_long, RendLevels)
summarise(siap_long, suma=sum(area))
# plot
p1<-  ggplot(siap_long, aes(x=RendLevels, y=area, fill=tipodearea)) + theme_bw() +
geom_bar(stat = "summary", fun.y= "sum", position="dodge") +
scale_y_continuous(breaks=c(1500000, 1000000, 500000), labels=c("1.5", "1.0", "0.5")) +
ylab("Area (Million ha)") + xlab("Yield class") +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
theme(axis.text=element_text(size=14), legend.text= element_text(size=14),
legend.title= element_text(size=14, face="bold"),
axis.title=element_text(size=14, face="bold")) +
scale_fill_manual(values=c("#c771c4", "#69a150"),
name  ="Area",
breaks=c("aplt2010", "acos2010"),
labels=c("Planted", "Harvested")) +
theme(legend.position=c(.80,.75)) +
ggtitle("a)") + theme(plot.title = element_text(hjust=0, size=14))
p1
p1 <- p1 + theme(axis.title.x=element_blank(), # remove x axis
axis.text.x=element_blank())
### Plot Total production ###
p2<-  ggplot(siap2010, aes(RendLevels, prod2010)) + geom_bar(stat="identity") + theme_bw() +
theme(axis.text.x = element_text(size=14, angle=45, hjust=1),
axis.text.y = element_text(size = 14),
axis.title=element_text(size=14, face="bold")) +
scale_y_continuous(breaks=c(0, 1e6, 2e6), labels=c("0.0", "1.0", "2.0")) +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
ylab("Aggregated production (Million ton)") + xlab("Yield class") +
ggtitle("b)") + theme(plot.title = element_text(hjust=0, size=14))
p2
### Plot population
## Rural and Total
# Long for poptype as variable with rural and total population
siap_long<-gather(siap2010, pop_type, population , Pob_rur10, POBTOT10)
siap_long$pop_type<-factor(siap_long$pop_type, levels=c("Pob_rur10", "POBTOT10")) # this is needed to have dodge to plot in the desired order
# plot
p3 <- ggplot(siap_long, aes(x=RendLevels, y=population, fill=pop_type)) + theme_bw() +
geom_bar(stat = "summary", fun.y= "sum", position="dodge") +
scale_y_continuous(breaks=c(5e6, 1.5e7, 2.5e7), labels=c("5", "15", "25")) +
ylab("Million people") + xlab("Yield class") +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
theme(axis.text=element_text(size=14), legend.text= element_text(size=14),
legend.title= element_text(size=14, face="bold"),
axis.title=element_text(size=14, face="bold")) +
scale_fill_manual(values=c("#E69F00", "#0072B2"),
name  ="Population",
breaks=c("Pob_rur10", "POBTOT10"),
labels=c("Rural", "Total")) +
theme(legend.position=c(0.80,0.75)) +
ggtitle("c)") + theme(plot.title = element_text(hjust=0, size=14))
p3
p3 <- p3 + theme(axis.title.x=element_blank(), # remove x axis
axis.text.x=element_blank())
###### Number of farms by area planted
# Long for NumFarms as variable with up_c1SEs (number unidad productivas category Estimated)
siap_long2<-gather(siap2010, Categ_uniproduc, NumFarms, up_c1_sE, up_c2_sE, up_c3_sE, up_c4_sE, up_c5_sE)
siap_long2$Categ_uniproduc<-factor(siap_long2$Categ_uniproduc, levels=c("up_c1_sE", "up_c2_sE", "up_c3_sE", "up_c4_sE", "up_c5_sE")) # this is needed to have dodge to plot in the desired order
# plot
p4 <- ggplot(siap_long2, aes(RendLevels, y=NumFarms, fill=Categ_uniproduc)) + theme_bw() +
geom_bar(stat= "summary", fun.y= "sum", position="dodge") +
scale_y_continuous(breaks=c(0, 2e5, 4e5), labels=c("0", "200", "400")) +
ylab("Thousand farms") + xlab("Yield class") +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
theme(axis.text.x = element_text(size=14, angle=45, hjust=1),
axis.text.y = element_text(size = 14),
legend.text= element_text(size=14),
legend.title= element_text(size=14, face="bold"),
axis.title=element_text(size=14, face="bold")) +
scale_fill_discrete(name  ="Area planted with \nmaize (ha) per farm",
labels= c("<3", "3-5", "5-10", "10-20", ">20")) +
theme(legend.position=c(0.72,0.68)) +
ggtitle("d)") + theme(plot.title = element_text(hjust=0, size=14))
p4
# plot
multiplot(p1, p2, p3, p4, cols=2)
## option Rural, fp1, fp0
# Long for poptype as variable
siap_long<-gather(siap2010, pop_type, population , Pob_rur10, fp1, fp0)
siap_long$pop_type<-factor(siap_long$pop_type, levels=c("Pob_rur10", "fp1", "fp0")) # this is needed to have dodge to plot in the desired order
# plot
p1 <-  ggplot(siap_long, aes(x=RendLevels, y=population, fill=pop_type)) + theme_bw() +
geom_bar(stat = "summary", fun.y= "sum", position="dodge") +
scale_y_continuous(breaks=c(0, 5e6, 1e7, 1.5e7,2e7, 2.5e7), labels=c("0", "5", "10", "15", "20", "25")) +
ylab("Million people") + xlab("Yield class") +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
theme(axis.text.y = element_text(size = 14),
legend.text= element_text(size=14),
legend.title= element_text(size=14, face="bold"),
axis.title=element_text(size=15, face="bold"),
axis.text.x=element_blank(), # remove x axis
axis.title.x=element_blank()) +
scale_fill_manual(values=c("#E69F00", "#009E73", "#56B4E9"),
name  ="",
breaks=c("Pob_rur10", "fp1", "fp0"),
labels=c("1) Rural \npop.", "2) Rural pop. that could be fed in municipalities \nwhere maize was produced",
"3)Total pop. that could be \nfed from maize production")) +
theme(legend.position="top") +
ggtitle("a)") + theme(plot.title = element_text(hjust=0, size=14))
p1
#### Plot deficit surplus
### Create variable for surplus or deficit
# Variable
siap2010<-mutate(siap2010, categSurplusDef= ifelse(fp3<0, "Deficit", "Surplus"))
#make surplusordefict absolute
siap2010<-mutate(siap2010, ValueSurplusDef= abs(fp3))
#Group
siap2010<-group_by(siap2010, RendLevels)
p2 <- ggplot(siap2010, aes(RendLevels, fill=categSurplusDef)) + theme_bw() +
geom_bar(stat = "count", position="dodge") +
ylab("Number of Municiplalities") + xlab("Yield class") +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
theme(axis.text.y = element_text(size = 14),
axis.text.x=element_text(size=14, angle=45, hjust=1),
legend.text= element_text(size=14),
legend.title= element_text(size=15, face="bold"),
axis.title=element_text(size=15,face="bold")) +
scale_fill_manual(values=c("#A80000", "#0070FF" ),
name  ="Potential people fed",
breaks=c("Deficit", "Surplus")) +
theme(legend.position=c(0.85,0.75)) +
ggtitle("b)") + theme(plot.title = element_text(hjust=0, size=14))
p2
# Single fig
multiplot(p1, p2, col=1)
ggplot (siap2010, aes(RendLevels, rend2010)) + geom_boxplot() + theme_bw() +
theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
scale_y_continuous(breaks=c(0.0, 2.5, 5.0, 7.5), labels=c("0.0", "2.5", "5.0", "7.5")) +
scale_x_discrete(labels=c(expression(paste(phantom(0)<=1,"*")), ">1 to 2*", ">2 to 3*", ">3 to 4", ">4 to 5", ">5 to 6", ">6")) +
ylab("Yield (ton/ha)") + xlab("Yield class") +
theme(plot.title = element_text(hjust=0))
biocLite("Heatplus")
source("http://bioconductor.org/biocLite.R")
biocLite("Heatplus")
library(vegan)
library(RColorBrewer)
library(Heatplus)
setwd("~/hubiC/Science/Teaching/Mx/BioinfInvgRepro/BioinfinvRepro/Unidad7/Prac_Uni7/ejemplosgenerales/bin")
OTU<- read.csv("../meta/Bacteria.csv", na.strings = "")
View(OTU)
View(OTU)
#indicar heads en rows
row.names(OTU) <- OTU$sample
OTU <- OTU[, -1]
View(OTU)
data.prop <- OTU/rowsum(OTU)
prop <- OTU/rowSum(OTU)
?rowsum
prop <- OTU/rowSums(OTU)
View(prop)
escal.color <- colorRampPalette(c("lightyellow", "Orange", "Darkred"), (100))
#Generar el plot
heatmap(as.matrix(prop, Rowv= NA,
Colv=NA, col=escal.color))
escal <- colorRampPalette(c("lightyellow", "Orange", "Darkred"), (100))
#Generar el plot
heatmap(as.matrix(prop, Rowv= NA,
Colv=NA, col=escal))
escal <- colorRampPalette(c("lightyellow", "Orange", "Darkred"),
space = "Lab")(100)
#Generar el plot
heatmap(as.matrix(prop, Rowv= NA,
Colv=NA, col=escal))
#Generar el plot
heatmap(as.matrix(prop), Rowv= NA,
Colv=NA, col=escal))
#Generar el plot
heatmap(as.matrix(prop), Rowv= NA,
Colv=NA, col=escal)
max<- apply(prop, 2, max)
max
n1<- names(which(max< 0.01))
n1
prop<- prop[, -which(names(prop) %in% n1)]
#Hacer otra vez el plot
heatmap(as.matrix(prop), Rowv= NA,
Colv=NA, col=escal)
#Calcular un ìndice bray curtis
data.dist<- vegdist(prop, method = "bray")
row.clus<- hclust(prop, "aver")
row.clus<- hclust(prop, "aver")
row.clus<- hclust(prop, "aver", is.na= TRUE)
row.clus<- hclust( na.omit(prop), "aver")
View(prop)
row.clus<- hclust(na.omit(prop), "aver")
row.clus<- hclust(prop, "aver")
?hclust
row.clus<- hclust(prop, "average")
row.clus<- hclust(prop, "single")
row.clus<- hclust(na.pass(prop), "single")
row.clus<- hclust(prop, "single")
row.clus<- hclust(prop)
setwd("~/hubiC/Science/Teaching/Mx/BioinfInvgRepro/BioinfinvRepro/Unidad7/Prac_Uni7/maices/bin")
library(maptools)
Biogeo<-readShapePoly("../data/rbiog4mgw/rbiog4mgw.shp")
plot(Biogeo)
plot(Biogeo, border="grey", col=Biogeo$PROVINCIA)
display.brewer.all()
palette<- c(brewer.pal(11, "PiYG"),brewer.pal(8, "Set1"))
plot(Biogeo, border="grey",
col=Biogeo$PROVINCIA)
palette(brewer.pal(11, "PiYG"),
brewer.pal(8, "Set1"))
palette(c(brewer.pal(11, "PiYG"),
brewer.pal(8, "Set1")))
plot(Biogeo, border="grey",
col=Biogeo$PROVINCIA)
Biogeo$PROVINCIA
levels(Biogeo$PROVINCIA)
#Cambiar de colores la provincia Tamaulipeca y del Pacifico
x <- c("Costa del Pacifico", "Tamaulipeca")
plot(Biogeo, border="grey", regions=x,
col=c("blue", "white"), fill=T)
plot(Biogeo, border="grey", regions=x,
col=c("blue", "white"))
palette(c(brewer.pal(11, "PiYG"),
brewer.pal(8, "Set1")))
plot(Biogeo, border="grey",
col=Biogeo$PROVINCIA)
fullmat<-read.delim("../meta/maizteocintle_SNP50k_meta_extended.txt")
fullmat<-[1:5, c("Latitud", "Longitud")]
fullmat[1:5,c("Latitud", "Longitud")]
plot(Biogeo, border="grey",
col=Biogeo$PROVINCIA, lwd=0.8)
#agregar puntos
points(fullmat$Longitud, fullmat$Latitud,
pch=19, col="black", cex=0.4)
#
library(RgoogleMaps)
install.packages("RgoogleMaps")
library(RgoogleMaps)
lat<- c(19.20, 19.65)
long<-c(-99.50, -98.64)
center= c(mean(lat), mean(long))
zoom <-10
mymap<- GetMap(center = center,
zoom = zoom, maptype = "satellite") )
mymap<- GetMap(center = center,
zoom = zoom, maptype = "satellite")
PlotOnStaticMap(mymap)
source("https://raw.githubusercontent.com/yihui/knitr/master/inst/examples/knitr-minimal.Rnw")
